#!/usr/bin/env python3.7

import iterm2
# This script was created with the "basic" environment which does not support adding dependencies
# with pip.

async def main(connection):
    # Your code goes here. Here's a bit of example code that adds a tab to the current window:
    app = await iterm2.async_get_app(connection)
    async def get_profile_for_session(session_id):
        session = app.get_session_by_id(session_id)
        return await session.async_set_profile('Production')
    window = app.current_terminal_window
    domain = iterm2.broadcast.BroadcastDomain()
    if window is not None:
        current_tab = await window.async_create_tab()
        app1 = current_tab.current_session
        domain.add_session(app1)
        await app1.async_send_text("ssh lt-app1.asdf\n", suppress_broadcast=True)
        app2 = await app1.async_split_pane(vertical=False)
        domain.add_session(app2)
        await app2.async_send_text("ssh lt-app2.asdf\n", suppress_broadcast=True)
        app3 = await app2.async_split_pane(vertical=False)
        domain.add_session(app3)
        await app3.async_send_text("ssh lt-app3.asdf\n", suppress_broadcast=True)
        app4 = await app3.async_split_pane(vertical=False)
        domain.add_session(app4)
        await app4.async_send_text("ssh lt-app4.asdf\n", suppress_broadcast=True)
        await iterm2.async_set_broadcast_domains(connection, [domain])
        await app1.async_send_text("cd latino_topup/current\n")
    else:
        # You can view this message in the script console.
        print("No current window")

iterm2.run_until_complete(main)
