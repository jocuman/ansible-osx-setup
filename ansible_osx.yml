---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          heroku/brew,
          thoughtbot/formulae,
          hashicorp/tap,
          cloudflare/cloudflare,
          d12frosted/emacs-plus,
         ]
    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - 1password-cli
        - brave-browser
        - docker
        - dropbox
        - font-fira-code
        - font-fira-mono
        - font-fira-sans
        - font-jetbrains-mono
        - google-chrome
        - google-cloud-sdk
        - firefox
        - iterm2
        - kindle
        - ngrok
        - tailscale
        - telegram
        - zoom

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          'ag',
          'age',
          'aichat',
          'autoconf',
          'autojump',
          'automake',
          'aws-iam-authenticator',
          'awscli',
          'bfg',
          'chruby',
          'cloudflare/cloudflare/cf-terraforming',
          'coreutils',
          'curl', 
          'direnv',
          'dnsmasq',
          'doctl',
          'fzf',
          'gcc',
          'gh',
          'gnu-time',
          'gpg',
          'hashicorp/tap/terraform',
          'htop',
          'imagemagick@6',          
          'libtool',
          'libxslt',
          'libyaml',
          'mas',
          'mysql@8.0',
          'nmap',
          'nushell',
          'nvm',
          'openssl' ,
          'pkg-config',
          'rcm',
          'readline',
          'redis',
          'ruby-install',
          'sqlite3',
          'the_silver_searcher',
          'tmux',
          'unixodbc',
          'unzip',
          'vim',
          'watchman',
          'xz',
          'yarn',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: "Install emacs"
      community.general.homebrew:
        name: emacs-plus
        state: present
        install_options: with-native-comp
        update_homebrew: yes

    - name: "Download Doom Emacs"
      ansible.builtin.git:
        clone: true
        repo: https://github.com/doomemacs/doomemacs
        depth: 1
        dest: "{{ lookup('env', 'HOME') }}/.config/emacs"

    - name: "Download all-the-icons"
      ansible.builtin.git:
        clone: true
        repo: https://github.com/domtronn/all-the-icons.el
        dest: /tmp/all-the-icons-fonts
      environment:
        GIT_TERMINAL_PROMPT: 0
        GIT_ASKPASS: /bin/true

    - name: "Copy all-the-icons-fonts"
      ansible.builtin.copy:
        src: /tmp/all-the-icons-fonts/fonts
        dest: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
        backup: true

    - name: "Clean up /tmp/all-the-icons-fonts"
      ansible.builtin.file:
        path: /tmp/all-the-icons-fonts
        state: absent

    - name: "Download nerd-icons (NFM.ttf)"
      ansible.builtin.git:
        clone: true
        repo: https://github.com/rainstormstudio/nerd-icons.el
        dest: /tmp/nerd-icons-fonts
      environment:
        GIT_TERMINAL_PROMPT: 0
        GIT_ASKPASS: /bin/true

    - name: "Copy nerd-icons (NFM.ttf)"
      ansible.builtin.copy:
        src: /tmp/nerd-icons-fonts/fonts/NFM.ttf
        dest: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
        backup: true

    - name: "Clean up /tmp/nerd-icons-fonts"
      ansible.builtin.file:
        path: /tmp/nerd-icons-fonts
        state: absent

    - name: "Install Doom Emacs"
      ansible.builtin.shell:
        cmd: "{{ lookup('env', 'HOME') }}/.config/emacs/bin/doom install --config --env --install --fonts --hooks --color --force"
      args:
        executable: /bin/bash

    - name: "Run doom sync"
      ansible.builtin.shell:
        cmd: "{{ lookup('env', 'HOME') }}/.config/emacs/bin/doom sync"
      args:
        executable: /bin/bash

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode
        - 441258766 # magnet
        - 1451685025 # wireguard
        - 1569813296 # 1password for safari
        
    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: "Create a default ZSH configuration"
      template:
        src: templates/.zshrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - git:
        repo: https://github.com/romkatv/powerlevel10k.git
        depth: 1
        dest: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh/themes/powerlevel10k"
        
    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - ruby
        - elixir
        - nodejs
        - python

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python latest
        asdf global python latest
        pip3 install ansible
        asdf reshim python

    - name: "Install Default Ruby"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install ruby latest
        asdf global ruby latest
        gem install bundler
        gem install cocoapods
        gem install rubocop
        gem install solargraph

    - name: "Install default node"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        bash /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/nodejs/bin/import-release-team-keyring
        asdf install nodejs latest
        asdf global nodejs latest

    - name: re-generate bins now we've installed some yarn packages
      shell: asdf reshim nodejs
        

